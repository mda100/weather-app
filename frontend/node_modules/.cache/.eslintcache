[{"/Users/martinadams/Desktop/weather-app/frontend/src/index.js":"1","/Users/martinadams/Desktop/weather-app/frontend/src/reportWebVitals.js":"2","/Users/martinadams/Desktop/weather-app/frontend/src/App.js":"3"},{"size":500,"mtime":1626401410489,"results":"4","hashOfConfig":"5"},{"size":362,"mtime":1626114451719,"results":"6","hashOfConfig":"5"},{"size":3315,"mtime":1626909646622,"results":"7","hashOfConfig":"5"},{"filePath":"8","messages":"9","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1255r7q",{"filePath":"10","messages":"11","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"12","messages":"13","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"14"},"/Users/martinadams/Desktop/weather-app/frontend/src/index.js",[],"/Users/martinadams/Desktop/weather-app/frontend/src/reportWebVitals.js",[],"/Users/martinadams/Desktop/weather-app/frontend/src/App.js",["15"],"import React, { useState } from 'react';\nimport './App.css';\n\n// Helper Functions\n\nfunction weatherApiBuilder(location){\n  let type = \"forecast\"\n  let key = \"ba47e033e3c54cd5b8720248211507\"\n  let days = 3\n  let aqi = \"yes\"\n  return `http://api.weatherapi.com/v1/\"${type}.json?key=${key}&q=${location}&days=${days}&aqi=${aqi}}&alerts=no`;\n}\n\n// Components\n  \nfunction Location (props){\n  return <div className=\"location\"> {props.data.weather.location.name}, {props.data.weather.location.region}, {props.data.weather.location.country} </div>\n}\n\nfunction Current (props){\n  return <div className=\"current\"> {props.data.weather.current.temp_f}&deg; F and {props.data.weather.current.condition.text} </div>\n}\n\nfunction Forecast (props){\n  const {forecastday} = props.data.weather.forecast;\n  return (<div className=\"forecast\">\n    <div className=\"forecast_1\"> \n    {forecastday[0].date} <br/>\n    <img src={forecastday[0].day.condition.icon} alt=\"\"/> <br/>\n    {forecastday[0].day.maxtemp_f}&deg; F /&nbsp;\n    {forecastday[0].day.mintemp_f}&deg; F <br/>\n    {forecastday[0].day.avghumidity}% Humidity <br/>\n  </div>\n  <div className=\"forecast_2\">\n    {forecastday[1].date} <br/>\n    <img src={forecastday[1].day.condition.icon} alt=\"\"/> <br/>\n    {forecastday[1].day.maxtemp_f}&deg; F /&nbsp;\n    {forecastday[1].day.mintemp_f}&deg; F <br/>\n    {forecastday[1].day.avghumidity}% Humidity \n  </div>\n  <div className=\"forecast_3\">\n    {forecastday[2].date} <br/>\n    <img src={forecastday[2].day.condition.icon} alt=\"\"/> <br/>\n    {forecastday[2].day.maxtemp_f}&deg; F /&nbsp;\n    {forecastday[2].day.mintemp_f}&deg; F <br/>\n    {forecastday[2].day.avghumidity}% Humidity <br/>\n    </div>\n    </div>)}\n\nfunction Search(props){\n  return (\n  <div className=\"search\">\n  <input\n    type=\"text\"\n    required\n    placeholder=\"City, Coordinates, or US/UK Zipcode...\"\n    value={props.value}\n    onChange ={props.onChangeValue} \n    /> \n  <button \n    onClick= {props.onClick}>\n      Submit\n  </button>\n  </div>);\n\n}\n// App\n\nclass App extends React.Component {\n\n  constructor(props){\n    super(props);\n    this.state = {\n      location: \"\",\n      token: false,\n      weather: \"\",\n    };\n  }\n\n  handleClick = async () => { \n    try {\n        const resp = await fetch(weatherApiBuilder(this.state.location, 3)) //if this fails -> catch\n        if (!resp.ok) {throw new Error(`An error has occurred: ${resp.status}`)} //if this fails -> error\n        const data = await resp.json() //if this fails -> catch\n        this.setState({token: true, weather: data})\n    }\n    catch(error){\n        console.log(error)\n    }\n  }\n\n  handleChangeValue = (e) => this.setState({location: e.target.value})\n\n  renderResults(){\n    if (!this.state.token){\n      return (\n        <div className=\"Home\">\n         <Search value={this.state.location} onChangeValue={this.handleChangeValue} onClick={this.handleClick}/> \n        </div>\n      ) \n    }\n    else {\n      return (\n        <div className=\"Results\">\n          <Location data={this.state}/>\n          <Search value={this.state.location} onChangeValue={this.handleChangeValue} onClick={this.handleClick}/>\n          <Current data={this.state}/> \n          <Forecast data={this.state}/>\n        </div>\n      )\n    }\n  }\n\n  render(){\n    return this.renderResults();\n  }\n}\n\nexport default App;\n\n\n",{"ruleId":"16","severity":1,"message":"17","line":1,"column":17,"nodeType":"18","messageId":"19","endLine":1,"endColumn":25},"no-unused-vars","'useState' is defined but never used.","Identifier","unusedVar"]