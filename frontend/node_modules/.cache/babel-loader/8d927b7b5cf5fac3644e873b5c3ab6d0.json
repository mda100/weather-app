{"ast":null,"code":"var _jsxFileName = \"/Users/martinadams/Desktop/weather-app/frontend/src/App.js\";\nimport React from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction weatherApiBuilder(location) {\n  let type = \"forecast\";\n  let key = \"ba47e033e3c54cd5b8720248211507\";\n  let days = 3;\n  let aqi = \"yes\";\n  return `http://api.weatherapi.com/v1/\"${type}.json?key=${key}&q=${location}&days=${days}&aqi=${aqi}}&alerts=no`;\n}\n\nasync function getWeather(apiUrl) {\n  try {\n    const response = await fetch(apiUrl);\n\n    if (!response.ok) {\n      const message = `An error has occurred: ${response.status}`;\n      throw new Error(message);\n    } else {\n      const data = await response.json();\n      return data;\n    }\n  } catch (error) {\n    console.log(error);\n  }\n}\n\nfunction Location(props) {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [\" \", props.data.display_location.name, \", \", props.data.display_location.region, \", \", props.data.display_location.country, \" \"]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 10\n  }, this);\n}\n\n_c = Location;\n\nfunction Current(props) {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [\" \", props.data.current.temp_f, \" Degrees Fahrenheit and \", props.data.current.humidity, \"% Humidity\"]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 10\n  }, this);\n}\n\n_c2 = Current;\n\nfunction Forecast(props) {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"grid-row\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: [\"Date: \", props.data.forecast.forecastday[0].date, \"Max: \", props.data.forecast.forecastday[0].day.mintemp_f, \"Min: \", props.data.forecast.forecastday[0].day.mintemp_f, \"Avg. Humidity: \", props.data.forecast.forecastday[0].day.avghumidity]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [\"Date: \", props.data.forecast.forecastday[1].date, \"Max: \", props.data.forecast.forecastday[1].day.mintemp_f, \"Min: \", props.data.forecast.forecastday[1].day.mintemp_f, \"Avg. Humidity: \", props.data.forecast.forecastday[1].day.avghumidity]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [\"Date: \", props.data.forecast.forecastday[2].date, \"Max: \", props.data.forecast.forecastday[2].day.mintemp_f, \"Min: \", props.data.forecast.forecastday[2].day.mintemp_f, \"Avg. Humidity: \", props.data.forecast.forecastday[2].day.avghumidity]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 10\n  }, this);\n}\n\n_c3 = Forecast;\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      location: \"\",\n      weather: \"\",\n      display_location: {\n        name: \"Oakland\",\n        region: \"CA\",\n        country: \"USA\"\n      },\n      current: {\n        temp_f: \"\",\n        humidity: \"\"\n      },\n      forecast: {\n        forecastday: [{\n          date: \"\",\n          day: {\n            mintemp_f: \"\",\n            maxtemp_f: \"\",\n            avghumidity: \"\",\n            condition: {\n              text: \"\"\n            }\n          }\n        }, {\n          date: \"\",\n          day: {\n            mintemp_f: \"\",\n            maxtemp_f: \"\",\n            avghumidity: \"\",\n            condition: {\n              text: \"\"\n            }\n          }\n        }, {\n          date: \"\",\n          day: {\n            mintemp_f: \"\",\n            maxtemp_f: \"\",\n            avghumidity: \"\",\n            condition: {\n              text: \"\"\n            }\n          }\n        }]\n      }\n    };\n\n    this.handleClick = async () => {\n      const data = await getWeather(weatherApiBuilder(this.state.location, 3));\n      this.setState({\n        weather: data\n      });\n      console.log(this.state.weather.location);\n      this.setState({\n        display_location: {\n          name: data.location.name,\n          region: data.location.region,\n          country: data.location.country\n        },\n        current: {\n          temp_f: data.current.temp_f,\n          humidity: data.current.humidity\n        },\n        forecast: {\n          forecastday: [{\n            date: data.forecast.forecastday[0].date,\n            day: {\n              mintemp_f: data.forecast.forecastday[0].day.mintemp_f,\n              maxtemp_f: data.forecast.forecastday[0].day.maxtemp_f,\n              avghumidity: data.forecast.forecastday[0].day.avghumidity,\n              condition: {\n                text: data.forecast.forecastday[0].day.condition.text\n              }\n            }\n          }, {\n            date: data.forecast.forecastday[1].date,\n            day: {\n              mintemp_f: data.forecast.forecastday[1].day.mintemp_f,\n              maxtemp_f: data.forecast.forecastday[1].day.maxtemp_f,\n              avghumidity: data.forecast.forecastday[1].day.avghumidity,\n              condition: {\n                text: data.forecast.forecastday[1].day.condition.text\n              }\n            }\n          }, {\n            date: data.forecast.forecastday[2].date,\n            day: {\n              mintemp_f: data.forecast.forecastday[2].day.mintemp_f,\n              maxtemp_f: data.forecast.forecastday[2].day.maxtemp_f,\n              avghumidity: data.forecast.forecastday[2].day.avghumidity,\n              condition: {\n                text: data.forecast.forecastday[2].day.condition.text\n              }\n            }\n          }]\n        }\n      });\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(Location, {\n        data: this.state\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 177,\n        columnNumber: 13\n      }, this), \"please enter city name, coordinates, or US/UK zip code:\", /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        required: true,\n        value: this.state.location,\n        onChange: e => this.setState({\n          location: e.target.value\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 179,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => this.handleClick(),\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 185,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Current, {\n        data: this.state\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 189,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Forecast, {\n        data: this.state\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 190,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 176,\n      columnNumber: 12\n    }, this);\n  }\n\n}\n\nexport default App; // ok everything worked but my async function is trash\n//#1 async \n//#2 clean up code/design/ data presentation\n//#3 style \n//#4 github and text julian\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"Location\");\n$RefreshReg$(_c2, \"Current\");\n$RefreshReg$(_c3, \"Forecast\");","map":{"version":3,"sources":["/Users/martinadams/Desktop/weather-app/frontend/src/App.js"],"names":["React","weatherApiBuilder","location","type","key","days","aqi","getWeather","apiUrl","response","fetch","ok","message","status","Error","data","json","error","console","log","Location","props","display_location","name","region","country","Current","current","temp_f","humidity","Forecast","forecast","forecastday","date","day","mintemp_f","avghumidity","App","Component","constructor","state","weather","maxtemp_f","condition","text","handleClick","setState","render","e","target","value"],"mappings":"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","sourcesContent":["import React from 'react';\n\n\nfunction weatherApiBuilder(location){\n  let type = \"forecast\"\n  let key = \"ba47e033e3c54cd5b8720248211507\"\n  let days = 3\n  let aqi = \"yes\"\n  return `http://api.weatherapi.com/v1/\"${type}.json?key=${key}&q=${location}&days=${days}&aqi=${aqi}}&alerts=no`;\n}\n\nasync function getWeather(apiUrl){\n  try {\n    const response = await fetch(apiUrl);\n    if (!response.ok) {\n      const message = `An error has occurred: ${response.status}`;\n      throw new Error(message);\n    }\n    else {\n      const data = await response.json();\n      return data\n    }\n  }\n  catch(error){console.log(error)}\n  }\n  \n\nfunction Location(props){\n  return <div> {props.data.display_location.name}, {props.data.display_location.region}, {props.data.display_location.country} </div>;\n}\nfunction Current(props){\n  return <div> {props.data.current.temp_f} Degrees Fahrenheit and {props.data.current.humidity}% Humidity</div>\n}\n\nfunction Forecast(props){\n  return <div className = \"grid-row\">\n    <div>\n      Date: {props.data.forecast.forecastday[0].date}\n      Max: {props.data.forecast.forecastday[0].day.mintemp_f}\n      Min: {props.data.forecast.forecastday[0].day.mintemp_f}\n      Avg. Humidity: {props.data.forecast.forecastday[0].day.avghumidity}\n    </div>\n    <div>\n      Date: {props.data.forecast.forecastday[1].date}\n      Max: {props.data.forecast.forecastday[1].day.mintemp_f}\n      Min: {props.data.forecast.forecastday[1].day.mintemp_f}\n      Avg. Humidity: {props.data.forecast.forecastday[1].day.avghumidity}\n    </div>\n    <div>\n    Date: {props.data.forecast.forecastday[2].date}\n      Max: {props.data.forecast.forecastday[2].day.mintemp_f}\n      Min: {props.data.forecast.forecastday[2].day.mintemp_f}\n      Avg. Humidity: {props.data.forecast.forecastday[2].day.avghumidity}\n    </div>\n  </div>\n}\n\nclass App extends React.Component {\n\n  constructor(props){\n\n    super(props);\n\n    this.state = {\n      location: \"\",\n      weather: \"\",\n\n      display_location:{\n        name:\"Oakland\",\n        region: \"CA\",\n        country: \"USA\"\n      },\n      current:{\n        temp_f: \"\",\n        humidity: \"\"\n      },\n      forecast:{\n        forecastday:[\n          {\n            date: \"\",\n            day:{\n              mintemp_f: \"\",\n              maxtemp_f: \"\",\n              avghumidity: \"\",\n              condition:{\n                text: \"\"\n              }\n            }\n          },\n          {\n            date: \"\",\n            day:{\n              mintemp_f: \"\",\n              maxtemp_f: \"\",\n              avghumidity: \"\",\n              condition:{\n                text: \"\"\n              }\n            }\n          },\n          {\n            date: \"\",\n            day:{\n              mintemp_f: \"\",\n              maxtemp_f: \"\",\n              avghumidity: \"\",\n              condition:{\n                text: \"\"\n              }\n            }\n          },\n        ]\n      }\n\n      \n    };\n\n    this.handleClick = async () => {\n      const data = await getWeather(weatherApiBuilder(this.state.location, 3));\n      this.setState({weather:data})\n      console.log(this.state.weather.location)\n      this.setState({\n        display_location:{\n          name: data.location.name,\n          region: data.location.region,\n          country: data.location.country,\n        },\n        current:{\n          temp_f: data.current.temp_f,\n          humidity: data.current.humidity\n        },\n        forecast:{\n          forecastday:[\n            {\n              date: data.forecast.forecastday[0].date,\n              day:{\n                mintemp_f: data.forecast.forecastday[0].day.mintemp_f,\n                maxtemp_f: data.forecast.forecastday[0].day.maxtemp_f,\n                avghumidity: data.forecast.forecastday[0].day.avghumidity,\n                condition: {\n                  text: data.forecast.forecastday[0].day.condition.text,\n                }\n              }\n            },\n            {\n              date: data.forecast.forecastday[1].date,\n              day:{\n                mintemp_f: data.forecast.forecastday[1].day.mintemp_f,\n                maxtemp_f: data.forecast.forecastday[1].day.maxtemp_f,\n                avghumidity: data.forecast.forecastday[1].day.avghumidity,\n                condition: {\n                  text: data.forecast.forecastday[1].day.condition.text,\n                }\n              }\n            },\n            {\n              date: data.forecast.forecastday[2].date,\n              day:{\n                mintemp_f: data.forecast.forecastday[2].day.mintemp_f,\n                maxtemp_f: data.forecast.forecastday[2].day.maxtemp_f,\n                avghumidity: data.forecast.forecastday[2].day.avghumidity,\n                condition: {\n                  text: data.forecast.forecastday[2].day.condition.text,\n                }\n              }\n            },\n          ]\n        }\n      })\n    }\n\n  }\n\n  \n  render(){\n    return <div>\n            <Location data={this.state}/>\n            please enter city name, coordinates, or US/UK zip code:\n            <input\n              type=\"text\"\n              required\n              value={this.state.location}\n              onChange ={(e) => this.setState({location: e.target.value})} \n              /> \n            <button \n              onClick= {() => this.handleClick()}>\n                Submit\n            </button>\n            <Current data={this.state}/>\n            <Forecast data={this.state}/>\n      </div>\n  }\n}\n\n\nexport default App;\n\n\n// ok everything worked but my async function is trash\n\n\n//#1 async \n//#2 clean up code/design/ data presentation\n//#3 style \n//#4 github and text julian\n"]},"metadata":{},"sourceType":"module"}