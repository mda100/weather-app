{"ast":null,"code":"var _jsxFileName = \"/Users/martinadams/Desktop/weather-app/frontend/src/App.js\";\nimport React from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Location(props) {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [\" \", props.data.display_city, \", \", props.data.display_state, \", \", props.data.display_country, \" \"]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 6,\n    columnNumber: 10\n  }, this);\n}\n\n_c = Location;\n\nfunction Current(props) {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [\" \", props.data.temperature, \" Degrees Fahrenheit and \", props.data.humidity, \"% Humidity\"]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 10,\n    columnNumber: 10\n  }, this);\n}\n\n_c2 = Current;\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      city: \"\",\n      state: \"\",\n      country: \"\",\n      apiKey: \"eea9891349d17d031cbf7b10b3d7e189\",\n      display_city: \"Oakland\",\n      display_state: \"CA\",\n      display_country: \"USA\",\n      current: {\n        temperature: \"\",\n        humidity: \"\"\n      },\n      day1: {\n        temperature: \"\",\n        humidity: \"\"\n      },\n      day2: {\n        temperature: \"\",\n        humidity: \"\"\n      },\n      day3: {\n        temperature: \"\",\n        humidity: \"\"\n      },\n      day4: {\n        temperature: \"\",\n        humidity: \"\"\n      }\n    };\n\n    this.handleClick = () => {\n      this.setState({\n        display_city: this.state.city,\n        display_state: this.state.state,\n        display_country: this.state.country\n      });\n      fetch(`http://api.openweathermap.org/data/2.5/weather?q=${this.state.city},${this.state.state},${this.state.country}&appid=${this.state.apiKey}`).then(res => res.json()).then(data => {\n        this.setState({\n          temperature: ((data.main.temp - 273.15) * 1.8 + 32).toFixed(1)\n        });\n        this.setState({\n          humidity: data.main.humidity\n        });\n      });\n      fetch(`api.openweathermap.org/data/2.5/forecast/daily?q=${this.state.city},${this.state.state},${this.state.country}&cnt=${this.state.cnt}&appid=${this.state.apiKey}`).then(res => res.json()).then(data => {\n        this.setState({\n          temperature: ((data.forecast.temperature.day - 273.15) * 1.8 + 32).toFixed(1)\n        });\n        this.setState({\n          humidity: data.forecast.humidity.value\n        });\n      });\n    };\n\n    this.handleClick = this.handleClick.bind(this); // https://reactjs.org/docs/react-component.html  ?\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(Location, {\n        data: this.state\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        required: true,\n        value: this.state.city,\n        onChange: e => this.setState({\n          city: e.target.value\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        required: true,\n        value: this.state.state,\n        onChange: e => this.setState({\n          state: e.target.value\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        required: true,\n        value: this.state.country,\n        onChange: e => this.setState({\n          country: e.target.value\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => this.handleClick(),\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Current, {\n        data: this.state\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 12\n    }, this);\n  }\n\n}\n\nexport default App;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Location\");\n$RefreshReg$(_c2, \"Current\");","map":{"version":3,"sources":["/Users/martinadams/Desktop/weather-app/frontend/src/App.js"],"names":["React","Location","props","data","display_city","display_state","display_country","Current","temperature","humidity","App","Component","constructor","state","city","country","apiKey","current","day1","day2","day3","day4","handleClick","setState","fetch","then","res","json","main","temp","toFixed","cnt","forecast","day","value","bind","render","e","target"],"mappings":"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","sourcesContent":["\nimport React from 'react';\n\n\nfunction Location(props){\n  return <div> {props.data.display_city}, {props.data.display_state}, {props.data.display_country} </div>;\n}\n\nfunction Current(props){\n  return <div> {props.data.temperature} Degrees Fahrenheit and {props.data.humidity}% Humidity</div>\n}\n\nclass App extends React.Component {\n\n  constructor(props){\n\n    super(props);\n\n    this.state = {\n      city: \"\",\n      state: \"\",\n      country: \"\",\n      apiKey: \"eea9891349d17d031cbf7b10b3d7e189\",\n\n      display_city: \"Oakland\",\n      display_state: \"CA\",\n      display_country: \"USA\",\n\n      current: {temperature:\"\", humidity:\"\"},\n      day1 : {temperature:\"\", humidity:\"\"},\n      day2 : {temperature:\"\", humidity:\"\"},\n      day3 : {temperature:\"\", humidity:\"\"},\n      day4 : {temperature:\"\", humidity:\"\"}\n      \n    } \n\n    this.handleClick = () => {\n\n      this.setState({\n        display_city: this.state.city,\n        display_state: this.state.state,\n        display_country: this.state.country\n      })\n\n      fetch(`http://api.openweathermap.org/data/2.5/weather?q=${this.state.city},${this.state.state},${this.state.country}&appid=${this.state.apiKey}`)\n        .then(res => res.json())\n        .then(data => {\n          this.setState({temperature:(((data.main.temp -273.15)*1.8)+32).toFixed(1)});\n          this.setState({humidity: data.main.humidity});\n          })\n\n      fetch(`api.openweathermap.org/data/2.5/forecast/daily?q=${this.state.city},${this.state.state},${this.state.country}&cnt=${this.state.cnt}&appid=${this.state.apiKey}`)\n        .then(res => res.json())\n        .then(data => {\n          this.setState({temperature:(((data.forecast.temperature.day-273.15)*1.8)+32).toFixed(1)});\n          this.setState({humidity: data.forecast.humidity.value});\n          })      \n    };\n    this.handleClick = this.handleClick.bind(this);  // https://reactjs.org/docs/react-component.html  ?\n\n  };\n  render(){\n    return <div>\n            <Location data={this.state}/>\n            <input\n              type=\"text\"\n              required\n              value={this.state.city}\n              onChange ={(e) => this.setState({city: e.target.value})} \n              /> \n            <input\n              type=\"text\"\n              required\n              value={this.state.state}\n              onChange ={(e) => this.setState({state: e.target.value})} \n              />\n            <input\n              type=\"text\"\n              required\n              value={this.state.country}\n              onChange ={(e) => this.setState({country: e.target.value})} \n              />\n            <button \n              onClick= {() => this.handleClick()}>\n                Submit\n            </button>\n            <Current data={this.state}/>\n            \n      {/* <Forecast/> */}\n      </div>\n  }\n}\n\n\nexport default App;\n\n\n\n\n"]},"metadata":{},"sourceType":"module"}