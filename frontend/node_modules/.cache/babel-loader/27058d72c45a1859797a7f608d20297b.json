{"ast":null,"code":"var _jsxFileName = \"/Users/martinadams/Desktop/weather-app/frontend/src/App.js\";\n// the app broke when i made \"weather\" the entire json file, unsure how to access it - maybe consolelog?\nimport React from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction apiBuilder(location, days) {\n  //days req. ? 4>x>1\n  return `http://api.weatherapi.com/v1/forecast.json?key=ba47e033e3c54cd5b8720248211507&q=${location}&days=${days}&aqi=yes&alerts=no`;\n}\n\nfunction Location(props) {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [\" \", props.data.display_location.name, \", \", props.data.display_location.region, \", \", props.data.display_location.country, \" \"]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 10,\n    columnNumber: 10\n  }, this);\n} //\"display\" data so location refresh onclick not on input\n\n\n_c = Location;\n\nfunction Current(props) {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [\" \", props.data.weather.forecast.forecastday[0].day.mintemp_f, \" Degrees Fahrenheit and \", props.data.weather.forecast.forecastday[0].day.mintemp_f, \"% Humidity\"]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 14,\n    columnNumber: 10\n  }, this);\n}\n\n_c2 = Current;\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      location: \"\",\n      apiKey: \"ba47e033e3c54cd5b8720248211507\",\n      apiUrl: \"http://api.weatherapi.com/v1/\",\n      //data structure same as api json\n      display_location: {\n        name: \"Oakland\",\n        region: \"CA\",\n        country: \"USA\"\n      },\n      weather: \"\" // current:{\n      //   temp_f: \"\",\n      //   humidity: \"\"\n      // },\n      // forecast:{\n      //   forecastday:[\n      //     {\n      //       day:{\n      //         mintemp_f: \"\",\n      //         maxtemp_f: \"\",\n      //         avghumidity: \"\",\n      //         condition:{\n      //           text: \"\"\n      //         }\n      //       }\n      //     },\n      //     {\n      //       day:{\n      //         mintemp_f: \"\",\n      //         maxtemp_f: \"\",\n      //         avghumidity: \"\",\n      //         condition:{\n      //           text: \"\"\n      //         }\n      //       }\n      //     },\n      //     {\n      //       day:{\n      //         mintemp_f: \"\",\n      //         maxtemp_f: \"\",\n      //         avghumidity: \"\",\n      //         condition:{\n      //           text: \"\"\n      //         }\n      //       }\n      //     },\n      //   ]\n      // }\n      // weather: [] //full api response, see https://www.weatherapi.com/api-explorer.aspx#forecast\n\n    };\n\n    this.handleClick = () => {\n      fetch(apiBuilder(this.state.location, 3)).then(res => res.json()).then(data => this.setState({\n        display_location: {\n          name: data.location.name,\n          region: data.location.region,\n          country: data.location.country\n        },\n        weather: data // current:{\n        //   temp_f: data.current.temp_f,\n        //   humidity: data.current.humidity\n        // },\n        // forecast:{\n        //   forecastday:[\n        //     {\n        //       day:{\n        //         mintemp_f: data.forecast.forecastday[0].day.mintemp_f,\n        //         maxtemp_f: data.forecast.forecastday[0].day.maxtemp_f,\n        //         avghumidity: data.forecast.forecastday[0].day.avghumidity,\n        //         condition: {\n        //           text: data.forecast.forecastday[0].day.condition.text,\n        //         }\n        //       }\n        //     },\n        //     {\n        //       day:{\n        //         mintemp_f: data.forecast.forecastday[1].day.mintemp_f,\n        //         maxtemp_f: data.forecast.forecastday[1].day.maxtemp_f,\n        //         avghumidity: data.forecast.forecastday[1].day.avghumidity,\n        //         condition: {\n        //           text: data.forecast.forecastday[1].day.condition.text,\n        //         }\n        //       }\n        //     },\n        //     {\n        //       day:{\n        //         mintemp_f: data.forecast.forecastday[2].day.mintemp_f,\n        //         maxtemp_f: data.forecast.forecastday[2].day.maxtemp_f,\n        //         avghumidity: data.forecast.forecastday[2].day.avghumidity,\n        //         condition: {\n        //           text: data.forecast.forecastday[2].day.condition.text,\n        //         }\n        //       }\n        //     },\n        //   ]\n        // }\n\n      }));\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(Location, {\n        data: this.state\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 13\n      }, this), \"please enter city name, coordinates or US/UK zip code:\", /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        required: true,\n        value: this.state.location,\n        onChange: e => this.setState({\n          location: e.target.value\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => this.handleClick(),\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Current, {\n        data: this.state\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 146,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 12\n    }, this);\n  }\n\n}\n\nexport default App; // forecast : one api call -> coordinates; 5 days -> list by 3 hours\n// ok the question is LISTS -> how do i transfer the freaking lists to react\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Location\");\n$RefreshReg$(_c2, \"Current\");","map":{"version":3,"sources":["/Users/martinadams/Desktop/weather-app/frontend/src/App.js"],"names":["React","apiBuilder","location","days","Location","props","data","display_location","name","region","country","Current","weather","forecast","forecastday","day","mintemp_f","App","Component","constructor","state","apiKey","apiUrl","handleClick","fetch","then","res","json","setState","render","e","target","value"],"mappings":"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","sourcesContent":["// the app broke when i made \"weather\" the entire json file, unsure how to access it - maybe consolelog?\nimport React from 'react';\n\nfunction apiBuilder(location, days){\n  //days req. ? 4>x>1\n  return `http://api.weatherapi.com/v1/forecast.json?key=ba47e033e3c54cd5b8720248211507&q=${location}&days=${days}&aqi=yes&alerts=no`;\n}\n\nfunction Location(props){\n  return <div> {props.data.display_location.name}, {props.data.display_location.region}, {props.data.display_location.country} </div>;\n}\n//\"display\" data so location refresh onclick not on input\nfunction Current(props){\n  return <div> {props.data.weather.forecast.forecastday[0].day.mintemp_f} Degrees Fahrenheit and {props.data.weather.forecast.forecastday[0].day.mintemp_f}% Humidity</div>\n}\n\nclass App extends React.Component {\n\n  constructor(props){\n\n    super(props);\n\n    this.state = {\n      location: \"\",\n      apiKey: \"ba47e033e3c54cd5b8720248211507\",\n      apiUrl: \"http://api.weatherapi.com/v1/\",\n\n      //data structure same as api json\n\n      display_location:{\n        name:\"Oakland\",\n        region: \"CA\",\n        country: \"USA\"\n      },\n      weather: \"\"\n      // current:{\n      //   temp_f: \"\",\n      //   humidity: \"\"\n      // },\n      // forecast:{\n      //   forecastday:[\n      //     {\n      //       day:{\n      //         mintemp_f: \"\",\n      //         maxtemp_f: \"\",\n      //         avghumidity: \"\",\n      //         condition:{\n      //           text: \"\"\n      //         }\n      //       }\n      //     },\n      //     {\n      //       day:{\n      //         mintemp_f: \"\",\n      //         maxtemp_f: \"\",\n      //         avghumidity: \"\",\n      //         condition:{\n      //           text: \"\"\n      //         }\n      //       }\n      //     },\n      //     {\n      //       day:{\n      //         mintemp_f: \"\",\n      //         maxtemp_f: \"\",\n      //         avghumidity: \"\",\n      //         condition:{\n      //           text: \"\"\n      //         }\n      //       }\n      //     },\n      //   ]\n      // }\n\n      // weather: [] //full api response, see https://www.weatherapi.com/api-explorer.aspx#forecast\n      \n    };\n\n    this.handleClick = () => {\n\n      fetch(apiBuilder(this.state.location, 3)) \n        .then(res => res.json())\n        .then(data => this.setState({\n          display_location:{\n            name: data.location.name,\n            region: data.location.region,\n            country: data.location.country,\n          },\n          weather : data\n          // current:{\n          //   temp_f: data.current.temp_f,\n          //   humidity: data.current.humidity\n          // },\n          // forecast:{\n          //   forecastday:[\n          //     {\n          //       day:{\n          //         mintemp_f: data.forecast.forecastday[0].day.mintemp_f,\n          //         maxtemp_f: data.forecast.forecastday[0].day.maxtemp_f,\n          //         avghumidity: data.forecast.forecastday[0].day.avghumidity,\n          //         condition: {\n          //           text: data.forecast.forecastday[0].day.condition.text,\n          //         }\n          //       }\n          //     },\n          //     {\n          //       day:{\n          //         mintemp_f: data.forecast.forecastday[1].day.mintemp_f,\n          //         maxtemp_f: data.forecast.forecastday[1].day.maxtemp_f,\n          //         avghumidity: data.forecast.forecastday[1].day.avghumidity,\n          //         condition: {\n          //           text: data.forecast.forecastday[1].day.condition.text,\n          //         }\n          //       }\n          //     },\n          //     {\n          //       day:{\n          //         mintemp_f: data.forecast.forecastday[2].day.mintemp_f,\n          //         maxtemp_f: data.forecast.forecastday[2].day.maxtemp_f,\n          //         avghumidity: data.forecast.forecastday[2].day.avghumidity,\n          //         condition: {\n          //           text: data.forecast.forecastday[2].day.condition.text,\n          //         }\n          //       }\n          //     },\n          //   ]\n          // }\n        }))\n       }\n\n  }\n  render(){\n    return <div>\n            <Location data={this.state}/>\n            please enter city name, coordinates or US/UK zip code:\n            <input\n              type=\"text\"\n              required\n              value={this.state.location}\n              onChange ={(e) => this.setState({location: e.target.value})} \n              /> \n            <button \n              onClick= {() => this.handleClick()}>\n                Submit\n            </button>\n            <Current data={this.state}/>\n      </div>\n  }\n}\n\n\nexport default App;\n\n\n\n// forecast : one api call -> coordinates; 5 days -> list by 3 hours\n\n\n\n// ok the question is LISTS -> how do i transfer the freaking lists to react\n"]},"metadata":{},"sourceType":"module"}