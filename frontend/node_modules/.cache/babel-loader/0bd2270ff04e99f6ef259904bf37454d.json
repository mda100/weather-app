{"ast":null,"code":"var _jsxFileName = \"/Users/martinadams/Desktop/weather-app/frontend/src/App.js\";\nimport React from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Location(props) {\n  const {\n    city,\n    state,\n    country\n  } = props;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [\" \", city, \", \", state, \", \", country]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 7,\n    columnNumber: 10\n  }, this);\n} // class Forecast extends React.Component {\n//   constructor(props){\n//     super(props);\n//     this.state = { \n//       cnt: 4,\n//       temperature: \"\",\n//       humidity:\"\"\n//     };\n//     this.handleClick = () => {\n//       fetch(`api.openweathermap.org/data/2.5/forecast/daily?q=${this.state.city},${this.state.state},${this.state.country}&cnt=${this.state.cnt}&appid=${this.state.apiKey}`)\n//         .then(res => res.json())\n//         .then(data => {\n//           this.setState({temperature:(((data.forecast.temperature.day-273.15)*1.8)+32).toFixed(1)});\n//           this.setState({humidity: data.forecast.humidity.value});\n//           })\n//     };\n//     this.handleClick = this.handleClick.bind(this);  // https://reactjs.org/docs/react-component.html  ?\n//   }\n//   render(){\n//     return <div>\n//           <h3> {this.state.temperature} Degrees Fahrenheit and {this.state.humidity}% Humidity in {this.state.city}</h3>\n//         </div>;\n//     }\n//   }\n\n\n_c = Location;\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      city: \"\",\n      state: \"\",\n      country: \"\",\n      apiKey: \"eea9891349d17d031cbf7b10b3d7e189\"\n    };\n\n    this.handleClick = () => {\n      fetch(`http://api.openweathermap.org/data/2.5/weather?q=${this.state.city},${this.state.state},${this.state.country}&appid=${this.state.apiKey}`).then(res => res.json()).then(data => {\n        this.setState({\n          temperature: ((data.main.temp - 273.15) * 1.8 + 32).toFixed(1)\n        });\n        this.setState({\n          humidity: data.main.humidity\n        });\n      });\n    };\n\n    this.handleClick = this.handleClick.bind(this); // https://reactjs.org/docs/react-component.html  ?\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        required: true,\n        value: this.state.city,\n        onChange: e => this.setState({\n          city: e.target.value\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        required: true,\n        value: this.state.state,\n        onChange: e => this.setState({\n          state: e.target.value\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        required: true,\n        value: this.state.country,\n        onChange: e => this.setState({\n          country: e.target.value\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => this.handleClick(),\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: [\" \", this.state.temperature, \" Degrees Fahrenheit and \", this.state.humidity, \"% Humidity in \", this.state.city]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 12\n    }, this);\n  }\n\n}\n\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"Location\");","map":{"version":3,"sources":["/Users/martinadams/Desktop/weather-app/frontend/src/App.js"],"names":["React","Location","props","city","state","country","App","Component","constructor","apiKey","handleClick","fetch","then","res","json","data","setState","temperature","main","temp","toFixed","humidity","bind","render","e","target","value"],"mappings":"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","sourcesContent":["\nimport React from 'react';\n\n\nfunction Location(props){\n  const {city, state, country} = props;\n  return <div> {city}, {state}, {country}</div>\n}\n\n  // class Forecast extends React.Component {\n\n  //   constructor(props){\n  \n  //     super(props);\n  \n  //     this.state = { \n  //       cnt: 4,\n  //       temperature: \"\",\n  //       humidity:\"\"\n  //     };\n  \n  //     this.handleClick = () => {\n  //       fetch(`api.openweathermap.org/data/2.5/forecast/daily?q=${this.state.city},${this.state.state},${this.state.country}&cnt=${this.state.cnt}&appid=${this.state.apiKey}`)\n  //         .then(res => res.json())\n  //         .then(data => {\n  //           this.setState({temperature:(((data.forecast.temperature.day-273.15)*1.8)+32).toFixed(1)});\n  //           this.setState({humidity: data.forecast.humidity.value});\n  //           })\n  //     };\n  //     this.handleClick = this.handleClick.bind(this);  // https://reactjs.org/docs/react-component.html  ?\n  //   }\n  \n  //   render(){\n  //     return <div>\n  //           <h3> {this.state.temperature} Degrees Fahrenheit and {this.state.humidity}% Humidity in {this.state.city}</h3>\n  //         </div>;\n  //     }\n  \n  //   }\n\n\n\nclass App extends React.Component {\n\n  constructor(props){\n\n    super(props);\n\n    this.state = {\n      city: \"\",\n      state: \"\",\n      country: \"\",\n      apiKey: \"eea9891349d17d031cbf7b10b3d7e189\",\n    } \n\n    this.handleClick = () => {\n      fetch(`http://api.openweathermap.org/data/2.5/weather?q=${this.state.city},${this.state.state},${this.state.country}&appid=${this.state.apiKey}`)\n        .then(res => res.json())\n        .then(data => {\n          this.setState({temperature:(((data.main.temp -273.15)*1.8)+32).toFixed(1)});\n          this.setState({humidity: data.main.humidity});\n          })\n    };\n    this.handleClick = this.handleClick.bind(this);  // https://reactjs.org/docs/react-component.html  ?\n\n  };\n  render(){\n    return <div>\n      <input\n              type=\"text\"\n              required\n              value={this.state.city}\n              onChange ={(e) => this.setState({city: e.target.value})} \n              /> \n            <input\n              type=\"text\"\n              required\n              value={this.state.state}\n              onChange ={(e) => this.setState({state: e.target.value})} \n              />\n            <input\n              type=\"text\"\n              required\n              value={this.state.country}\n              onChange ={(e) => this.setState({country: e.target.value})} \n              />\n            <button \n              onClick= {() => this.handleClick()}>\n                Submit\n            </button>\n            <h3> {this.state.temperature} Degrees Fahrenheit and {this.state.humidity}% Humidity in {this.state.city}</h3>\n      {/* <Forecast/> */}\n      </div>\n  }\n}\n\n\nexport default App;\n\n\n\n\n"]},"metadata":{},"sourceType":"module"}