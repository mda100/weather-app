{"ast":null,"code":"var _jsxFileName = \"/Users/martinadams/Desktop/weather-app/frontend/src/App.js\";\nimport React from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Location(props) {\n  const {\n    city,\n    state,\n    country,\n    apiKey,\n    display_city,\n    display_state,\n    display_country\n  } = props.data;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \" \"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 7,\n    columnNumber: 10\n  }, this);\n} // class Forecast extends React.Component {\n//   constructor(props){\n//     super(props);\n//     this.state = { \n//       cnt: 4,\n//       temperature: \"\",\n//       humidity:\"\"\n//     };\n//     this.handleClick = () => {\n//       fetch(`api.openweathermap.org/data/2.5/forecast/daily?q=${this.state.city},${this.state.state},${this.state.country}&cnt=${this.state.cnt}&appid=${this.state.apiKey}`)\n//         .then(res => res.json())\n//         .then(data => {\n//           this.setState({temperature:(((data.forecast.temperature.day-273.15)*1.8)+32).toFixed(1)});\n//           this.setState({humidity: data.forecast.humidity.value});\n//           })\n//     };\n//     this.handleClick = this.handleClick.bind(this);  // https://reactjs.org/docs/react-component.html  ?\n//   }\n//   render(){\n//     return <div>\n//           <h3> {this.state.temperature} Degrees Fahrenheit and {this.state.humidity}% Humidity in {this.state.city}</h3>\n//         </div>;\n//     }\n//   }\n\n\n_c = Location;\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      city: \"\",\n      state: \"\",\n      country: \"\",\n      apiKey: \"eea9891349d17d031cbf7b10b3d7e189\",\n      display_city: \"Oakland\",\n      display_state: \"CA\",\n      display_country: \"USA\"\n    };\n\n    this.handleClick = () => {\n      this.setState({\n        display_city: this.state.city,\n        display_state: this.state.state,\n        display_country: this.state.country\n      });\n      fetch(`http://api.openweathermap.org/data/2.5/weather?q=${this.state.city},${this.state.state},${this.state.country}&appid=${this.state.apiKey}`).then(res => res.json()).then(data => {\n        this.setState({\n          temperature: ((data.main.temp - 273.15) * 1.8 + 32).toFixed(1)\n        });\n        this.setState({\n          humidity: data.main.humidity\n        });\n      });\n    };\n\n    this.handleClick = this.handleClick.bind(this); // https://reactjs.org/docs/react-component.html  ?\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(Location, {\n        city: this.state.city,\n        state: this.state.state,\n        country: this.state.country\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        required: true,\n        value: this.state.city,\n        onChange: e => this.setState({\n          city: e.target.value\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        required: true,\n        value: this.state.state,\n        onChange: e => this.setState({\n          state: e.target.value\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        required: true,\n        value: this.state.country,\n        onChange: e => this.setState({\n          country: e.target.value\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => this.handleClick(),\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: [\" \", this.state.temperature, \" Degrees Fahrenheit and \", this.state.humidity, \"% Humidity\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 12\n    }, this);\n  }\n\n}\n\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"Location\");","map":{"version":3,"sources":["/Users/martinadams/Desktop/weather-app/frontend/src/App.js"],"names":["React","Location","props","city","state","country","apiKey","display_city","display_state","display_country","data","App","Component","constructor","handleClick","setState","fetch","then","res","json","temperature","main","temp","toFixed","humidity","bind","render","e","target","value"],"mappings":"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","sourcesContent":["\nimport React from 'react';\n\n\nfunction Location(props){\n  const {city, state, country, apiKey, display_city, display_state, display_country} = props.data\n  return <div> </div>;\n}\n\n  // class Forecast extends React.Component {\n\n  //   constructor(props){\n  \n  //     super(props);\n  \n  //     this.state = { \n  //       cnt: 4,\n  //       temperature: \"\",\n  //       humidity:\"\"\n  //     };\n  \n  //     this.handleClick = () => {\n  //       fetch(`api.openweathermap.org/data/2.5/forecast/daily?q=${this.state.city},${this.state.state},${this.state.country}&cnt=${this.state.cnt}&appid=${this.state.apiKey}`)\n  //         .then(res => res.json())\n  //         .then(data => {\n  //           this.setState({temperature:(((data.forecast.temperature.day-273.15)*1.8)+32).toFixed(1)});\n  //           this.setState({humidity: data.forecast.humidity.value});\n  //           })\n  //     };\n  //     this.handleClick = this.handleClick.bind(this);  // https://reactjs.org/docs/react-component.html  ?\n  //   }\n  \n  //   render(){\n  //     return <div>\n  //           <h3> {this.state.temperature} Degrees Fahrenheit and {this.state.humidity}% Humidity in {this.state.city}</h3>\n  //         </div>;\n  //     }\n  \n  //   }\n\n\n\nclass App extends React.Component {\n\n  constructor(props){\n\n    super(props);\n\n    this.state = {\n      city: \"\",\n      state: \"\",\n      country: \"\",\n      apiKey: \"eea9891349d17d031cbf7b10b3d7e189\",\n\n      display_city: \"Oakland\",\n      display_state: \"CA\",\n      display_country: \"USA\"\n    } \n\n    this.handleClick = () => {\n\n      this.setState({\n        display_city: this.state.city,\n        display_state: this.state.state,\n        display_country: this.state.country\n      })\n\n      fetch(`http://api.openweathermap.org/data/2.5/weather?q=${this.state.city},${this.state.state},${this.state.country}&appid=${this.state.apiKey}`)\n        .then(res => res.json())\n        .then(data => {\n          this.setState({temperature:(((data.main.temp -273.15)*1.8)+32).toFixed(1)});\n          this.setState({humidity: data.main.humidity});\n          })\n    };\n    this.handleClick = this.handleClick.bind(this);  // https://reactjs.org/docs/react-component.html  ?\n\n  };\n  render(){\n    return <div>\n            <Location city = {this.state.city}\n              state = {this.state.state}\n              country = {this.state.country}\n             />\n            <input\n              type=\"text\"\n              required\n              value={this.state.city}\n              onChange ={(e) => this.setState({city: e.target.value})} \n              /> \n            <input\n              type=\"text\"\n              required\n              value={this.state.state}\n              onChange ={(e) => this.setState({state: e.target.value})} \n              />\n            <input\n              type=\"text\"\n              required\n              value={this.state.country}\n              onChange ={(e) => this.setState({country: e.target.value})} \n              />\n            <button \n              onClick= {() => this.handleClick()}>\n                Submit\n            </button>\n            <h3> {this.state.temperature} Degrees Fahrenheit and {this.state.humidity}% Humidity</h3>\n      {/* <Forecast/> */}\n      </div>\n  }\n}\n\n\nexport default App;\n\n\n\n\n"]},"metadata":{},"sourceType":"module"}