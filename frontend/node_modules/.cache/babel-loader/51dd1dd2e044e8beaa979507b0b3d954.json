{"ast":null,"code":"var _jsxFileName = \"/Users/martinadams/Desktop/weather-app/frontend/src/App.js\",\n    _s = $RefreshSig$();\n\nimport './App.css';\nimport { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [city, setCity] = useState(\"Oakland\");\n  const [state, setState] = useState(\"CA\"); //only for US cities\n\n  const [country, setCountry] = useState(\"USA\");\n  const apiKey = \"eea9891349d17d031cbf7b10b3d7e189\";\n  const [temperature, setTemperature] = useState(\"\");\n  const [humidity, setHumidity] = useState(\"\");\n\n  const handleClick = (city, state = \"\", country) => {\n    var data;\n    fetch(`http://api.openweathermap.org/data/2.5/weather?q=${city},${state},${country}&appid=${apiKey}`).then(res => res.json()).then(data => {\n      setTemperature(((data.main.temp - 273.15) * 1.8 + 32).toFixed(1));\n      setHumidity(data.main.humidity);\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      required: true,\n      value: city,\n      onChange: e => setCity(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      required: true,\n      value: state,\n      onChange: e => setState(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      required: true,\n      value: country,\n      onChange: e => setCountry(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => handleClick(city),\n      children: \"Submit\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: [\" \", temperature, \" Degrees Fahrenheit and \", humidity, \"% Humidity in \", city]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"7iRIwjMiFi+OG0LFHGS27QnWkm4=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/martinadams/Desktop/weather-app/frontend/src/App.js"],"names":["useState","App","city","setCity","state","setState","country","setCountry","apiKey","temperature","setTemperature","humidity","setHumidity","handleClick","data","fetch","then","res","json","main","temp","toFixed","e","target","value"],"mappings":";;;AAAA,OAAO,WAAP;AACA,SAASA,QAAT,QAAyB,OAAzB;;;AAEA,SAASC,GAAT,GAAe;AAAA;;AACb,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBH,QAAQ,CAAC,SAAD,CAAhC;AACA,QAAM,CAACI,KAAD,EAAQC,QAAR,IAAoBL,QAAQ,CAAC,IAAD,CAAlC,CAFa,CAE4B;;AACzC,QAAM,CAACM,OAAD,EAAUC,UAAV,IAAwBP,QAAQ,CAAC,KAAD,CAAtC;AACA,QAAMQ,MAAM,GAAG,kCAAf;AACA,QAAM,CAACC,WAAD,EAAcC,cAAd,IAAgCV,QAAQ,CAAC,EAAD,CAA9C;AACA,QAAM,CAACW,QAAD,EAAWC,WAAX,IAA0BZ,QAAQ,CAAC,EAAD,CAAxC;;AAEA,QAAMa,WAAW,GAAG,CAACX,IAAD,EAAME,KAAK,GAAC,EAAZ,EAAeE,OAAf,KAA2B;AAC7C,QAAIQ,IAAJ;AACAC,IAAAA,KAAK,CAAE,oDAAmDb,IAAK,IAAGE,KAAM,IAAGE,OAAQ,UAASE,MAAO,EAA9F,CAAL,CACGQ,IADH,CACQC,GAAG,IAAIA,GAAG,CAACC,IAAJ,EADf,EAEGF,IAFH,CAEQF,IAAI,IAAI;AACZJ,MAAAA,cAAc,CAAC,CAAE,CAACI,IAAI,CAACK,IAAL,CAAUC,IAAV,GAAgB,MAAjB,IAAyB,GAA1B,GAA+B,EAAhC,EAAoCC,OAApC,CAA4C,CAA5C,CAAD,CAAd;AACAT,MAAAA,WAAW,CAACE,IAAI,CAACK,IAAL,CAAUR,QAAX,CAAX;AACC,KALL;AAMD,GARD;;AAUA,sBACE;AAAK,IAAA,SAAS,EAAG,KAAjB;AAAA,4BACI;AACE,MAAA,IAAI,EAAC,MADP;AAEE,MAAA,QAAQ,MAFV;AAGE,MAAA,KAAK,EAAET,IAHT;AAIE,MAAA,QAAQ,EAAIoB,CAAD,IAAOnB,OAAO,CAACmB,CAAC,CAACC,MAAF,CAASC,KAAV;AAJ3B;AAAA;AAAA;AAAA;AAAA,YADJ,eAOI;AACE,MAAA,IAAI,EAAC,MADP;AAEE,MAAA,QAAQ,MAFV;AAGE,MAAA,KAAK,EAAEpB,KAHT;AAIE,MAAA,QAAQ,EAAIkB,CAAD,IAAOjB,QAAQ,CAACiB,CAAC,CAACC,MAAF,CAASC,KAAV;AAJ5B;AAAA;AAAA;AAAA;AAAA,YAPJ,eAaI;AACE,MAAA,IAAI,EAAC,MADP;AAEE,MAAA,QAAQ,MAFV;AAGE,MAAA,KAAK,EAAElB,OAHT;AAIE,MAAA,QAAQ,EAAIgB,CAAD,IAAOf,UAAU,CAACe,CAAC,CAACC,MAAF,CAASC,KAAV;AAJ9B;AAAA;AAAA;AAAA;AAAA,YAbJ,eAmBI;AACE,MAAA,OAAO,EAAG,MAAMX,WAAW,CAACX,IAAD,CAD7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAnBJ,eAuBE;AAAA,sBAAMO,WAAN,8BAA2CE,QAA3C,oBAAmET,IAAnE;AAAA;AAAA;AAAA;AAAA;AAAA,YAvBF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AA2BD;;GA7CQD,G;;KAAAA,G;AA+CT,eAAeA,GAAf","sourcesContent":["import './App.css';\nimport { useState } from 'react';\n\nfunction App() {\n  const [city, setCity] = useState(\"Oakland\")\n  const [state, setState] = useState(\"CA\") //only for US cities\n  const [country, setCountry] = useState(\"USA\")\n  const apiKey = \"eea9891349d17d031cbf7b10b3d7e189\"\n  const [temperature, setTemperature] = useState(\"\")\n  const [humidity, setHumidity] = useState(\"\")\n\n  const handleClick = (city,state=\"\",country) => {\n    var data;\n    fetch(`http://api.openweathermap.org/data/2.5/weather?q=${city},${state},${country}&appid=${apiKey}`)\n      .then(res => res.json())\n      .then(data => {\n        setTemperature((((data.main.temp -273.15)*1.8)+32).toFixed(1));\n        setHumidity(data.main.humidity);\n        })\n  }\n\n  return (\n    <div className = \"App\">\n        <input\n          type=\"text\"\n          required\n          value={city}\n          onChange ={(e) => setCity(e.target.value)} \n          /> \n        <input\n          type=\"text\"\n          required\n          value={state}\n          onChange ={(e) => setState(e.target.value)} \n          />\n        <input\n          type=\"text\"\n          required\n          value={country}\n          onChange ={(e) => setCountry(e.target.value)} \n          />\n        <button \n          onClick= {() => handleClick(city)}>\n            Submit\n        </button>\n      <h3> {temperature} Degrees Fahrenheit and {humidity}% Humidity in {city}</h3>\n    </div>\n  )\n}\n\nexport default App;\n\n"]},"metadata":{},"sourceType":"module"}