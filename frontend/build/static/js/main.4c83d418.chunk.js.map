{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["Location","props","className","data","weather","location","name","region","country","Current","current","temp_f","condition","text","Forecast","forecastday","forecast","date","src","day","icon","alt","maxtemp_f","mintemp_f","avghumidity","Search","type","required","placeholder","value","onChange","onChangeValue","onClick","App","handleClick","a","fetch","state","resp","ok","Error","status","json","setState","token","console","log","handleChangeValue","e","target","this","renderResults","React","Component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.4c83d418.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport './App.css';\n\n// Helper Functions\n\nfunction weatherApiBuilder(location){\n  let type = \"forecast\"\n  let key = \"ba47e033e3c54cd5b8720248211507\"\n  let days = 3\n  let aqi = \"yes\"\n  return `http://api.weatherapi.com/v1/\"${type}.json?key=${key}&q=${location}&days=${days}&aqi=${aqi}}&alerts=no`;\n}\n\n// Components\n  \nfunction Location (props){\n  return <div className=\"location\"> {props.data.weather.location.name}, {props.data.weather.location.region}, {props.data.weather.location.country} </div>\n}\n\nfunction Current (props){\n  return <div className=\"current\"> {props.data.weather.current.temp_f}&deg; F and {props.data.weather.current.condition.text} </div>\n}\n\nfunction Forecast (props){\n  const {forecastday} = props.data.weather.forecast;\n  return (<div className=\"forecast\">\n    <div className=\"forecast_1\"> \n    {forecastday[0].date} <br/>\n    <img src={forecastday[0].day.condition.icon} alt=\"\"/> <br/>\n    {forecastday[0].day.maxtemp_f}&deg; F /&nbsp;\n    {forecastday[0].day.mintemp_f}&deg; F <br/>\n    {forecastday[0].day.avghumidity}% Humidity <br/>\n  </div>\n  <div className=\"forecast_2\">\n    {forecastday[1].date} <br/>\n    <img src={forecastday[1].day.condition.icon} alt=\"\"/> <br/>\n    {forecastday[1].day.maxtemp_f}&deg; F /&nbsp;\n    {forecastday[1].day.mintemp_f}&deg; F <br/>\n    {forecastday[1].day.avghumidity}% Humidity \n  </div>\n  <div className=\"forecast_3\">\n    {forecastday[2].date} <br/>\n    <img src={forecastday[2].day.condition.icon} alt=\"\"/> <br/>\n    {forecastday[2].day.maxtemp_f}&deg; F /&nbsp;\n    {forecastday[2].day.mintemp_f}&deg; F <br/>\n    {forecastday[2].day.avghumidity}% Humidity <br/>\n    </div>\n    </div>)}\n\nfunction Search(props){\n  return (\n  <div className=\"search\">\n  <input\n    type=\"text\"\n    required\n    placeholder=\"City, Coordinates, or US/UK Zipcode...\"\n    value={props.value}\n    onChange ={props.onChangeValue} \n    /> \n  <button \n    onClick= {props.onClick}>\n      Submit\n  </button>\n  </div>);\n\n}\n// App\n\nclass App extends React.Component {\n\n  constructor(props){\n    super(props);\n    this.state = {\n      location: \"\",\n      token: false,\n      weather: \"\",\n    };\n  }\n\n  handleClick = async () => { \n    try {\n        const resp = await fetch(weatherApiBuilder(this.state.location, 3)) //if this fails -> catch\n        if (!resp.ok) {throw new Error(`An error has occurred: ${resp.status}`)} //if this fails -> error\n        const data = await resp.json() //if this fails -> catch\n        this.setState({token: true, weather: data})\n    }\n    catch(error){\n        console.log(error)\n    }\n  }\n\n  handleChangeValue = (e) => this.setState({location: e.target.value})\n\n  renderResults(){\n    if (!this.state.token){\n      return (\n        <div className=\"Home\">\n         <Search value={this.state.location} onChangeValue={this.handleChangeValue} onClick={this.handleClick}/> \n        </div>\n      ) \n    }\n    else {\n      return (\n        <div className=\"Results\">\n          <Location data={this.state}/>\n          <Search value={this.state.location} onChangeValue={this.handleChangeValue} onClick={this.handleClick}/>\n          <Current data={this.state}/> \n          <Forecast data={this.state}/>\n        </div>\n      )\n    }\n  }\n\n  render(){\n    return this.renderResults();\n  }\n}\n\nexport default App;\n\n\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}